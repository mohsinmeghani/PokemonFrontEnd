{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\pokemon\\\\PokemonFrontend\\\\src\\\\components\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PokemonCard from \"./PokemonCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [pokemons, setPokemons] = useState();\n  console.log(pokemons); // Function to collect data\n\n  const test = () => {\n    return async () => {\n      const response = await fetch(\"http://pokemon.local/api/pokemon\");\n      const data = await response.json();\n      return data;\n    };\n  };\n\n  const ApiGet = () => {\n    fetch('http://pokemon.local/api/pokemon').then(response => response.json()).then(json => setPokemons(json));\n  };\n\n  const getApiData = async () => {\n    const response = await fetch(\"http://pokemon.local/api/pokemon\").then(response => response.json()); // update the state\n\n    setPokemons(response);\n  };\n\n  useEffect(() => {\n    ApiGet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PokemonCard, {\n      pokemons: pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"rBWClgwAGBrbTl0X7jxze8IjujI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","PokemonCard","Home","pokemons","setPokemons","console","log","test","response","fetch","data","json","ApiGet","then","getApiData"],"sources":["D:/Projects/pokemon/PokemonFrontend/src/components/Home.jsx"],"sourcesContent":["import React, {useState,useEffect} from \"react\";\r\nimport PokemonCard from \"./PokemonCard\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const [pokemons, setPokemons] = useState();\r\n  console.log(pokemons)\r\n  \r\n  // Function to collect data\r\n\r\n  const test = () => {\r\n    return async () => {\r\n      const response = await fetch( \"http://pokemon.local/api/pokemon\");\r\n      const data = await response.json();\r\n      return data;\r\n    }\r\n  }\r\n\r\n  const ApiGet=()=>{\r\n    fetch('http://pokemon.local/api/pokemon')\r\n    .then((response)=>response.json())\r\n    .then((json)=>setPokemons(json))\r\n  }\r\n  \r\n  const getApiData = async () => {\r\n    const response = await fetch(\r\n      \"http://pokemon.local/api/pokemon\"\r\n    ).then((response) => response.json());\r\n  \r\n    // update the state\r\n    setPokemons(response);\r\n  };\r\n\r\n  useEffect(() => { \r\n    ApiGet();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Search</h1> \r\n       <PokemonCard pokemons={pokemons} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Home;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;EACAM,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAHiB,CAKjB;;EAEA,MAAMI,IAAI,GAAG,MAAM;IACjB,OAAO,YAAY;MACjB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAF,CAA5B;MACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACA,OAAOD,IAAP;IACD,CAJD;EAKD,CAND;;EAQA,MAAME,MAAM,GAAC,MAAI;IACfH,KAAK,CAAC,kCAAD,CAAL,CACCI,IADD,CACOL,QAAD,IAAYA,QAAQ,CAACG,IAAT,EADlB,EAECE,IAFD,CAEOF,IAAD,IAAQP,WAAW,CAACO,IAAD,CAFzB;EAGD,CAJD;;EAMA,MAAMG,UAAU,GAAG,YAAY;IAC7B,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kCAD0B,CAAL,CAErBI,IAFqB,CAEfL,QAAD,IAAcA,QAAQ,CAACG,IAAT,EAFE,CAAvB,CAD6B,CAK7B;;IACAP,WAAW,CAACI,QAAD,CAAX;EACD,CAPD;;EASAR,SAAS,CAAC,MAAM;IACdY,MAAM;EACP,CAFQ,EAEN,EAFM,CAAT;EAKA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEG,QAAC,WAAD;MAAa,QAAQ,EAAET;IAAvB;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAzCD;;GAAMD,I;;KAAAA,I;AA6CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}